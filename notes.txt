Git & GitHub Notes
==================

1. Installation & Setup
-----------------------
- Set username:  
    git config --global user.name "faiz"
- Set email:  
    git config --global user.email "faiz@gmail.com"
- List config:  
    git config --list
- Unset username/email:  
    git config --global --unset user.name  
    git config --global --unset user.email

2. Pushing Code to GitHub
-------------------------
- Initialize repo:  
    git init
- Add files:  
    git add app.html  
    git add .
- Commit changes:  
    git commit -m "home page complete"
- Rename branch to main:  
    git branch -M main
- Add remote:  
    git remote add origin https://github/faiz/project1
- Push to remote:  
    git push -u origin main

3. .gitignore File
------------------
- Example entries:
    ```
    app.js
    *.css
    folder/
    ```

4. git restore Command
----------------------
- Restore file in working directory:  
    git restore index.html  
    git restore .
- Unstage file:  
    git restore --staged app.js

5. git revert Command
---------------------
- Show commit hashes:  
    git log  
    git log --oneline
- Revert a commit (creates a new commit):  
    git revert <commit_hash>

6. git reset Command
--------------------
- Remove commits and changes:
    - Reset to specific commit:  
        git reset <commit_hash>
    - Soft reset (keeps changes staged):  
        git reset --soft HEAD~1
    - Mixed reset (default, keeps changes unstaged):  
        git reset --mixed HEAD~1  
        git reset HEAD~1
    - Hard reset (removes changes from working directory):  
        git reset --hard HEAD~1

7. git status & Aliases
-----------------------
- Check status:  
    git status
- Create alias (global):  
    git config --global alias.st status
- Create alias (local):  
    git config alias.b branch
- Edit .gitconfig with nano:  
    nano .gitconfig

8. Branching
------------
- List branches:  
    git branch
- Create branch:  
    git branch <branch_name>
- Switch branch:  
    git switch <branch_name>  
    git checkout <branch_name>
- Create & switch:  
    git switch -c <branch_name>  
    git checkout -b <branch_name>
- Delete branch:  
    git branch -D <branch_name>
- Push branch:  
    git push -u origin <branch_name>
- Merge branch:  
    git switch main  
    git merge <branch_name>  
    git push -u origin main

9. Amend Commit
---------------
- Amend last commit message:  
    git commit --amend -m "new message"
- Amend interactively:  
    git commit --amend  
    (Use vim: ESC, :wq to save)

10. Cloning Repositories
------------------------
- Clone repo:  
    git clone https://github/project
- Clone into current directory:  
    git clone https://github/project .
- Clone specific branch:  
    git clone --branch <branch> https://github/project

11. git fetch vs git pull
-------------------------
- Fetch changes:  
    git fetch origin  
    git status  
    git merge origin/main
- Pull changes:  
    git pull origin main

12. git diff Command
--------------------
- Show unstaged changes:  
    git diff
- Show staged changes:  
    git diff --staged
- Compare with remote:  
    git diff origin/main
- Compare two commits:  
    git diff <commit1> <commit2>
- Show only file names:  
    git diff --name-only
- Show word diff:  
    git diff --color-words

13. Skip Staging Area
---------------------
- (Incomplete in original notes, but to commit directly use:)  
    git commit -am "message"
